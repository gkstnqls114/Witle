#pragma once

//// Animation Type /////////////////////////////////////////// 
#define ANIMATION_TYPE_ONCE			0
#define ANIMATION_TYPE_LOOP			1
#define ANIMATION_TYPE_PINGPONG		2

#define ANIMATION_CALLBACK_EPSILON	0.015f
//// Animation Type /////////////////////////////////////////// 

#define SECOND_PER_FRAME float(1.f/30.f) // 1 프레임당 몇초인가?

struct ANIMATION_INFO
{
	ENUM_ANIMATIONID ID{ ANIMATIONID_ERROR };
	float StartTime{ -1 };
	float EndTime{ -1 };
	int Type{ ANIMATION_TYPE_LOOP };
};

// Player ////////////////////////////////////
// 반드시 가져올 모델링 애니메이션 데이터의 애니메이션 개수(아래의 NUM_ANIMATON)가 맞도록 설정해야합니다.

#define NUM_ANIMATIONE 11

const ANIMATION_INFO ANIMATION_IDLE         { PLAYER_ANIMATIONID_IDLE, 0.f * SECOND_PER_FRAME,   30.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_FORWARD      { PLAYER_ANIMATIONID_FORWARD, 31.f * SECOND_PER_FRAME,  63.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_BACKWARD     { PLAYER_ANIMATIONID_BACKWARD, 64.f * SECOND_PER_FRAME,  104.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_RIGHT        { PLAYER_ANIMATIONID_RIGHT, 105.f * SECOND_PER_FRAME, 137.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_LEFT         { PLAYER_ANIMATIONID_LEFT, 138.f * SECOND_PER_FRAME, 170.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_ATTACK       { PLAYER_ANIMATIONID_ATTACK, 171.f * SECOND_PER_FRAME, 191.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_BROOMPREPARE { PLAYER_ANIMATIONID_BROOMPREPARE, 192.f * SECOND_PER_FRAME, 230.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_BROOMIDLE    { PLAYER_ANIMATIONID_BROOMIDLE, 231.f * SECOND_PER_FRAME, 261.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_BROOMFORWARD { PLAYER_ANIMATIONID_BROOMFORWARD, 262.f * SECOND_PER_FRAME, 292.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_DEAD         { PLAYER_ANIMATIONID_DEAD, 293.f * SECOND_PER_FRAME, 313.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANIMATION_HIT          { PLAYER_ANIMATIONID_HIT, 314.f * SECOND_PER_FRAME, 334.f * SECOND_PER_FRAME };
// Player ////////////////////////////////////


// SpaceCat ////////////////////////////////////
#define SPACECAT_ANIMATIONE 5

const ANIMATION_INFO SPACECAT_IDLE   { GENERALMONSTER_ANIMATIONID_IDLE, 0.f * SECOND_PER_FRAME,   30.f * SECOND_PER_FRAME };
const ANIMATION_INFO SPACECAT_MOVE   { GENERALMONSTER_ANIMATIONID_MOVE, 31.f * SECOND_PER_FRAME,  60.f * SECOND_PER_FRAME };
const ANIMATION_INFO SPACECAT_ATTACK { GENERALMONSTER_ANIMATIONID_ATTACK, 61.f * SECOND_PER_FRAME,  95.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO SPACECAT_DEAD   { GENERALMONSTER_ANIMATIONID_DEAD, 96.f * SECOND_PER_FRAME, 115.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO SPACECAT_HIT    { GENERALMONSTER_ANIMATIONID_HIT, 116.f * SECOND_PER_FRAME, 135.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
// SpaceCat ////////////////////////////////////

// CreepyMonster ////////////////////////////////////
#define CREEPYMONSTER_ANIMATIONE 5

const ANIMATION_INFO CREEPYMONSTER_IDLE   { GENERALMONSTER_ANIMATIONID_IDLE, 0.f * SECOND_PER_FRAME,   30.f * SECOND_PER_FRAME };
const ANIMATION_INFO CREEPYMONSTER_MOVE   { GENERALMONSTER_ANIMATIONID_MOVE, 31.f * SECOND_PER_FRAME,  50.f * SECOND_PER_FRAME };
const ANIMATION_INFO CREEPYMONSTER_ATTACK { GENERALMONSTER_ANIMATIONID_ATTACK, 51.f * SECOND_PER_FRAME,  88.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO CREEPYMONSTER_DEAD   { GENERALMONSTER_ANIMATIONID_DEAD, 89.f * SECOND_PER_FRAME, 110.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO CREEPYMONSTER_HIT    { GENERALMONSTER_ANIMATIONID_HIT, 111.f * SECOND_PER_FRAME, 125.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
// CreepyMonster ////////////////////////////////////

// CreepyMonster ////////////////////////////////////
#define MUSHROOM_ANIMATIONE 5

const ANIMATION_INFO ANI_MUSHROOM_IDLE    { GENERALMONSTER_ANIMATIONID_IDLE, 0.f * SECOND_PER_FRAME,   20.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANI_MUSHROOM_MOVE    { GENERALMONSTER_ANIMATIONID_MOVE, 21.f * SECOND_PER_FRAME,  51.f * SECOND_PER_FRAME };
const ANIMATION_INFO ANI_MUSHROOM_ATTACK  { GENERALMONSTER_ANIMATIONID_ATTACK, 52.f * SECOND_PER_FRAME,  82.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO ANI_MUSHROOM_DEAD    { GENERALMONSTER_ANIMATIONID_DEAD, 83.f * SECOND_PER_FRAME, 103.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO ANI_MUSHROOM_HIT     { GENERALMONSTER_ANIMATIONID_HIT, 104.f * SECOND_PER_FRAME, 124.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
// CreepyMonster ////////////////////////////////////

// Boss ////////////////////////////////////
#define BOSSMONSTER_ANIMATIONE 10

const ANIMATION_INFO BOSS_IDLE		 { BOSSMONSTER_ANIMATIONID_IDLE, 2.f * SECOND_PER_FRAME,   32.f * SECOND_PER_FRAME }; // 기본
const ANIMATION_INFO BOSS_MOVE		 { BOSSMONSTER_ANIMATIONID_MOVE, 33.f * SECOND_PER_FRAME,   63.f * SECOND_PER_FRAME }; // 이동
const ANIMATION_INFO BOSS_CHASE		 { BOSSMONSTER_ANIMATIONID_CHASE, 64.f * SECOND_PER_FRAME,   84.f * SECOND_PER_FRAME, ANIMATION_TYPE_LOOP }; // 추격
const ANIMATION_INFO BOSS_BREATH     { BOSSMONSTER_ANIMATIONID_BREATH, 85.f * SECOND_PER_FRAME,   145.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE }; // 브레스
const ANIMATION_INFO BOSS_DOWNSTORK  { BOSSMONSTER_ANIMATIONID_DOWNSTROKE, 146.f * SECOND_PER_FRAME,   181.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE }; // 내려찍기
const ANIMATION_INFO BOSS_TAILATTACK { BOSSMONSTER_ANIMATIONID_TAILATTACK, 182.f * SECOND_PER_FRAME,   222.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE }; // 꼬리회전
const ANIMATION_INFO BOSS_RUSH       { BOSSMONSTER_ANIMATIONID_RUSH, 223.f * SECOND_PER_FRAME,   293.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE }; // 돌진
const ANIMATION_INFO BOSS_BUF        { BOSSMONSTER_ANIMATIONID_BUF, 294.f * SECOND_PER_FRAME,   339.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE };
const ANIMATION_INFO BOSS_DEAD       { BOSSMONSTER_ANIMATIONID_DEAD, 340.f * SECOND_PER_FRAME,   375.f * SECOND_PER_FRAME, ANIMATION_TYPE_ONCE };
const ANIMATION_INFO BOSS_STONE      { BOSSMONSTER_ANIMATIONID_STONE, 0.f * SECOND_PER_FRAME,   1.f * SECOND_PER_FRAME };
// Boss ////////////////////////////////////

// Altar ////////////////////////////////////
#define ALTARSPHERE_ANIMATIONE 2

const ANIMATION_INFO ALTARSPHERE_FLOW{ ALTARSPHERE_ANIMATIONID_FLOW, 0.f * SECOND_PER_FRAME,   30.f * SECOND_PER_FRAME , ANIMATION_TYPE_ONCE };
const ANIMATION_INFO ALTARSPHERE_IDLE{ ALTARSPHERE_ANIMATIONID_IDLE, 31.f * SECOND_PER_FRAME,  60.f * SECOND_PER_FRAME };
// Altar ////////////////////////////////////